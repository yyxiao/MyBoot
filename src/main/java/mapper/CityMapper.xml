<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.CityMapper">
  <resultMap id="BaseResultMap" type="model.City">
    <id column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    code, name
  </sql>
  <select id="selectByExample" parameterType="model.CityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from city
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from city
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.CityExample">
    delete from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.City">
    insert into city (code, name)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.City">
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.CityExample" resultType="java.lang.Integer">
    select count(*) from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update city
    <set>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update city
    set code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.City">
    update city
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.City">
    update city
    set name = #{name,jdbcType=VARCHAR}
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="model.City">
    <id column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="test1" jdbcType="REAL" property="test1" />
    <result column="test2" jdbcType="REAL" property="test2" />
    <result column="test3" jdbcType="DECIMAL" property="test3" />
    <result column="calorie" jdbcType="DECIMAL" property="calorie" />
    <result column="carbohydrate" jdbcType="DECIMAL" property="carbohydrate" />
    <result column="fat" jdbcType="DECIMAL" property="fat" />
    <result column="protein" jdbcType="DECIMAL" property="protein" />
    <result column="fibre" jdbcType="DECIMAL" property="fibre" />
    <result column="vitamine_a" jdbcType="DECIMAL" property="vitamineA" />
    <result column="vitamine_c" jdbcType="DECIMAL" property="vitamineC" />
    <result column="vitamine_e" jdbcType="DECIMAL" property="vitamineE" />
    <result column="carotene" jdbcType="DECIMAL" property="carotene" />
    <result column="oryzanin" jdbcType="DECIMAL" property="oryzanin" />
    <result column="lactochrome" jdbcType="DECIMAL" property="lactochrome" />
    <result column="niacin" jdbcType="DECIMAL" property="niacin" />
    <result column="cholesterol" jdbcType="DECIMAL" property="cholesterol" />
    <result column="magnesium" jdbcType="DECIMAL" property="magnesium" />
    <result column="calcium" jdbcType="DECIMAL" property="calcium" />
    <result column="iron" jdbcType="DECIMAL" property="iron" />
    <result column="zinc" jdbcType="DECIMAL" property="zinc" />
    <result column="copper" jdbcType="DECIMAL" property="copper" />
    <result column="manganese" jdbcType="DECIMAL" property="manganese" />
    <result column="potassium" jdbcType="DECIMAL" property="potassium" />
    <result column="phosphorus" jdbcType="DECIMAL" property="phosphorus" />
    <result column="sodium" jdbcType="DECIMAL" property="sodium" />
    <result column="selenium" jdbcType="DECIMAL" property="selenium" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    code, name, test1, test2, test3, calorie, carbohydrate, fat, protein, fibre, vitamine_a, 
    vitamine_c, vitamine_e, carotene, oryzanin, lactochrome, niacin, cholesterol, magnesium, 
    calcium, iron, zinc, copper, manganese, potassium, phosphorus, sodium, selenium
  </sql>
  <select id="selectByExample" parameterType="model.CityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from city
    where code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from city
    where code = #{code,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.CityExample">
    delete from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.City">
    insert into city (code, name, test1, 
      test2, test3, calorie, 
      carbohydrate, fat, protein, 
      fibre, vitamine_a, vitamine_c, 
      vitamine_e, carotene, oryzanin, 
      lactochrome, niacin, cholesterol, 
      magnesium, calcium, iron, 
      zinc, copper, manganese, 
      potassium, phosphorus, sodium, 
      selenium)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{test1,jdbcType=REAL}, 
      #{test2,jdbcType=REAL}, #{test3,jdbcType=DECIMAL}, #{calorie,jdbcType=DECIMAL}, 
      #{carbohydrate,jdbcType=DECIMAL}, #{fat,jdbcType=DECIMAL}, #{protein,jdbcType=DECIMAL}, 
      #{fibre,jdbcType=DECIMAL}, #{vitamineA,jdbcType=DECIMAL}, #{vitamineC,jdbcType=DECIMAL}, 
      #{vitamineE,jdbcType=DECIMAL}, #{carotene,jdbcType=DECIMAL}, #{oryzanin,jdbcType=DECIMAL}, 
      #{lactochrome,jdbcType=DECIMAL}, #{niacin,jdbcType=DECIMAL}, #{cholesterol,jdbcType=DECIMAL}, 
      #{magnesium,jdbcType=DECIMAL}, #{calcium,jdbcType=DECIMAL}, #{iron,jdbcType=DECIMAL}, 
      #{zinc,jdbcType=DECIMAL}, #{copper,jdbcType=DECIMAL}, #{manganese,jdbcType=DECIMAL}, 
      #{potassium,jdbcType=DECIMAL}, #{phosphorus,jdbcType=DECIMAL}, #{sodium,jdbcType=DECIMAL}, 
      #{selenium,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="model.City">
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="test1 != null">
        test1,
      </if>
      <if test="test2 != null">
        test2,
      </if>
      <if test="test3 != null">
        test3,
      </if>
      <if test="calorie != null">
        calorie,
      </if>
      <if test="carbohydrate != null">
        carbohydrate,
      </if>
      <if test="fat != null">
        fat,
      </if>
      <if test="protein != null">
        protein,
      </if>
      <if test="fibre != null">
        fibre,
      </if>
      <if test="vitamineA != null">
        vitamine_a,
      </if>
      <if test="vitamineC != null">
        vitamine_c,
      </if>
      <if test="vitamineE != null">
        vitamine_e,
      </if>
      <if test="carotene != null">
        carotene,
      </if>
      <if test="oryzanin != null">
        oryzanin,
      </if>
      <if test="lactochrome != null">
        lactochrome,
      </if>
      <if test="niacin != null">
        niacin,
      </if>
      <if test="cholesterol != null">
        cholesterol,
      </if>
      <if test="magnesium != null">
        magnesium,
      </if>
      <if test="calcium != null">
        calcium,
      </if>
      <if test="iron != null">
        iron,
      </if>
      <if test="zinc != null">
        zinc,
      </if>
      <if test="copper != null">
        copper,
      </if>
      <if test="manganese != null">
        manganese,
      </if>
      <if test="potassium != null">
        potassium,
      </if>
      <if test="phosphorus != null">
        phosphorus,
      </if>
      <if test="sodium != null">
        sodium,
      </if>
      <if test="selenium != null">
        selenium,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="test1 != null">
        #{test1,jdbcType=REAL},
      </if>
      <if test="test2 != null">
        #{test2,jdbcType=REAL},
      </if>
      <if test="test3 != null">
        #{test3,jdbcType=DECIMAL},
      </if>
      <if test="calorie != null">
        #{calorie,jdbcType=DECIMAL},
      </if>
      <if test="carbohydrate != null">
        #{carbohydrate,jdbcType=DECIMAL},
      </if>
      <if test="fat != null">
        #{fat,jdbcType=DECIMAL},
      </if>
      <if test="protein != null">
        #{protein,jdbcType=DECIMAL},
      </if>
      <if test="fibre != null">
        #{fibre,jdbcType=DECIMAL},
      </if>
      <if test="vitamineA != null">
        #{vitamineA,jdbcType=DECIMAL},
      </if>
      <if test="vitamineC != null">
        #{vitamineC,jdbcType=DECIMAL},
      </if>
      <if test="vitamineE != null">
        #{vitamineE,jdbcType=DECIMAL},
      </if>
      <if test="carotene != null">
        #{carotene,jdbcType=DECIMAL},
      </if>
      <if test="oryzanin != null">
        #{oryzanin,jdbcType=DECIMAL},
      </if>
      <if test="lactochrome != null">
        #{lactochrome,jdbcType=DECIMAL},
      </if>
      <if test="niacin != null">
        #{niacin,jdbcType=DECIMAL},
      </if>
      <if test="cholesterol != null">
        #{cholesterol,jdbcType=DECIMAL},
      </if>
      <if test="magnesium != null">
        #{magnesium,jdbcType=DECIMAL},
      </if>
      <if test="calcium != null">
        #{calcium,jdbcType=DECIMAL},
      </if>
      <if test="iron != null">
        #{iron,jdbcType=DECIMAL},
      </if>
      <if test="zinc != null">
        #{zinc,jdbcType=DECIMAL},
      </if>
      <if test="copper != null">
        #{copper,jdbcType=DECIMAL},
      </if>
      <if test="manganese != null">
        #{manganese,jdbcType=DECIMAL},
      </if>
      <if test="potassium != null">
        #{potassium,jdbcType=DECIMAL},
      </if>
      <if test="phosphorus != null">
        #{phosphorus,jdbcType=DECIMAL},
      </if>
      <if test="sodium != null">
        #{sodium,jdbcType=DECIMAL},
      </if>
      <if test="selenium != null">
        #{selenium,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.CityExample" resultType="java.lang.Integer">
    select count(*) from city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update city
    <set>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.test1 != null">
        test1 = #{record.test1,jdbcType=REAL},
      </if>
      <if test="record.test2 != null">
        test2 = #{record.test2,jdbcType=REAL},
      </if>
      <if test="record.test3 != null">
        test3 = #{record.test3,jdbcType=DECIMAL},
      </if>
      <if test="record.calorie != null">
        calorie = #{record.calorie,jdbcType=DECIMAL},
      </if>
      <if test="record.carbohydrate != null">
        carbohydrate = #{record.carbohydrate,jdbcType=DECIMAL},
      </if>
      <if test="record.fat != null">
        fat = #{record.fat,jdbcType=DECIMAL},
      </if>
      <if test="record.protein != null">
        protein = #{record.protein,jdbcType=DECIMAL},
      </if>
      <if test="record.fibre != null">
        fibre = #{record.fibre,jdbcType=DECIMAL},
      </if>
      <if test="record.vitamineA != null">
        vitamine_a = #{record.vitamineA,jdbcType=DECIMAL},
      </if>
      <if test="record.vitamineC != null">
        vitamine_c = #{record.vitamineC,jdbcType=DECIMAL},
      </if>
      <if test="record.vitamineE != null">
        vitamine_e = #{record.vitamineE,jdbcType=DECIMAL},
      </if>
      <if test="record.carotene != null">
        carotene = #{record.carotene,jdbcType=DECIMAL},
      </if>
      <if test="record.oryzanin != null">
        oryzanin = #{record.oryzanin,jdbcType=DECIMAL},
      </if>
      <if test="record.lactochrome != null">
        lactochrome = #{record.lactochrome,jdbcType=DECIMAL},
      </if>
      <if test="record.niacin != null">
        niacin = #{record.niacin,jdbcType=DECIMAL},
      </if>
      <if test="record.cholesterol != null">
        cholesterol = #{record.cholesterol,jdbcType=DECIMAL},
      </if>
      <if test="record.magnesium != null">
        magnesium = #{record.magnesium,jdbcType=DECIMAL},
      </if>
      <if test="record.calcium != null">
        calcium = #{record.calcium,jdbcType=DECIMAL},
      </if>
      <if test="record.iron != null">
        iron = #{record.iron,jdbcType=DECIMAL},
      </if>
      <if test="record.zinc != null">
        zinc = #{record.zinc,jdbcType=DECIMAL},
      </if>
      <if test="record.copper != null">
        copper = #{record.copper,jdbcType=DECIMAL},
      </if>
      <if test="record.manganese != null">
        manganese = #{record.manganese,jdbcType=DECIMAL},
      </if>
      <if test="record.potassium != null">
        potassium = #{record.potassium,jdbcType=DECIMAL},
      </if>
      <if test="record.phosphorus != null">
        phosphorus = #{record.phosphorus,jdbcType=DECIMAL},
      </if>
      <if test="record.sodium != null">
        sodium = #{record.sodium,jdbcType=DECIMAL},
      </if>
      <if test="record.selenium != null">
        selenium = #{record.selenium,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update city
    set code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      test1 = #{record.test1,jdbcType=REAL},
      test2 = #{record.test2,jdbcType=REAL},
      test3 = #{record.test3,jdbcType=DECIMAL},
      calorie = #{record.calorie,jdbcType=DECIMAL},
      carbohydrate = #{record.carbohydrate,jdbcType=DECIMAL},
      fat = #{record.fat,jdbcType=DECIMAL},
      protein = #{record.protein,jdbcType=DECIMAL},
      fibre = #{record.fibre,jdbcType=DECIMAL},
      vitamine_a = #{record.vitamineA,jdbcType=DECIMAL},
      vitamine_c = #{record.vitamineC,jdbcType=DECIMAL},
      vitamine_e = #{record.vitamineE,jdbcType=DECIMAL},
      carotene = #{record.carotene,jdbcType=DECIMAL},
      oryzanin = #{record.oryzanin,jdbcType=DECIMAL},
      lactochrome = #{record.lactochrome,jdbcType=DECIMAL},
      niacin = #{record.niacin,jdbcType=DECIMAL},
      cholesterol = #{record.cholesterol,jdbcType=DECIMAL},
      magnesium = #{record.magnesium,jdbcType=DECIMAL},
      calcium = #{record.calcium,jdbcType=DECIMAL},
      iron = #{record.iron,jdbcType=DECIMAL},
      zinc = #{record.zinc,jdbcType=DECIMAL},
      copper = #{record.copper,jdbcType=DECIMAL},
      manganese = #{record.manganese,jdbcType=DECIMAL},
      potassium = #{record.potassium,jdbcType=DECIMAL},
      phosphorus = #{record.phosphorus,jdbcType=DECIMAL},
      sodium = #{record.sodium,jdbcType=DECIMAL},
      selenium = #{record.selenium,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.City">
    update city
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="test1 != null">
        test1 = #{test1,jdbcType=REAL},
      </if>
      <if test="test2 != null">
        test2 = #{test2,jdbcType=REAL},
      </if>
      <if test="test3 != null">
        test3 = #{test3,jdbcType=DECIMAL},
      </if>
      <if test="calorie != null">
        calorie = #{calorie,jdbcType=DECIMAL},
      </if>
      <if test="carbohydrate != null">
        carbohydrate = #{carbohydrate,jdbcType=DECIMAL},
      </if>
      <if test="fat != null">
        fat = #{fat,jdbcType=DECIMAL},
      </if>
      <if test="protein != null">
        protein = #{protein,jdbcType=DECIMAL},
      </if>
      <if test="fibre != null">
        fibre = #{fibre,jdbcType=DECIMAL},
      </if>
      <if test="vitamineA != null">
        vitamine_a = #{vitamineA,jdbcType=DECIMAL},
      </if>
      <if test="vitamineC != null">
        vitamine_c = #{vitamineC,jdbcType=DECIMAL},
      </if>
      <if test="vitamineE != null">
        vitamine_e = #{vitamineE,jdbcType=DECIMAL},
      </if>
      <if test="carotene != null">
        carotene = #{carotene,jdbcType=DECIMAL},
      </if>
      <if test="oryzanin != null">
        oryzanin = #{oryzanin,jdbcType=DECIMAL},
      </if>
      <if test="lactochrome != null">
        lactochrome = #{lactochrome,jdbcType=DECIMAL},
      </if>
      <if test="niacin != null">
        niacin = #{niacin,jdbcType=DECIMAL},
      </if>
      <if test="cholesterol != null">
        cholesterol = #{cholesterol,jdbcType=DECIMAL},
      </if>
      <if test="magnesium != null">
        magnesium = #{magnesium,jdbcType=DECIMAL},
      </if>
      <if test="calcium != null">
        calcium = #{calcium,jdbcType=DECIMAL},
      </if>
      <if test="iron != null">
        iron = #{iron,jdbcType=DECIMAL},
      </if>
      <if test="zinc != null">
        zinc = #{zinc,jdbcType=DECIMAL},
      </if>
      <if test="copper != null">
        copper = #{copper,jdbcType=DECIMAL},
      </if>
      <if test="manganese != null">
        manganese = #{manganese,jdbcType=DECIMAL},
      </if>
      <if test="potassium != null">
        potassium = #{potassium,jdbcType=DECIMAL},
      </if>
      <if test="phosphorus != null">
        phosphorus = #{phosphorus,jdbcType=DECIMAL},
      </if>
      <if test="sodium != null">
        sodium = #{sodium,jdbcType=DECIMAL},
      </if>
      <if test="selenium != null">
        selenium = #{selenium,jdbcType=DECIMAL},
      </if>
    </set>
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.City">
    update city
    set name = #{name,jdbcType=VARCHAR},
      test1 = #{test1,jdbcType=REAL},
      test2 = #{test2,jdbcType=REAL},
      test3 = #{test3,jdbcType=DECIMAL},
      calorie = #{calorie,jdbcType=DECIMAL},
      carbohydrate = #{carbohydrate,jdbcType=DECIMAL},
      fat = #{fat,jdbcType=DECIMAL},
      protein = #{protein,jdbcType=DECIMAL},
      fibre = #{fibre,jdbcType=DECIMAL},
      vitamine_a = #{vitamineA,jdbcType=DECIMAL},
      vitamine_c = #{vitamineC,jdbcType=DECIMAL},
      vitamine_e = #{vitamineE,jdbcType=DECIMAL},
      carotene = #{carotene,jdbcType=DECIMAL},
      oryzanin = #{oryzanin,jdbcType=DECIMAL},
      lactochrome = #{lactochrome,jdbcType=DECIMAL},
      niacin = #{niacin,jdbcType=DECIMAL},
      cholesterol = #{cholesterol,jdbcType=DECIMAL},
      magnesium = #{magnesium,jdbcType=DECIMAL},
      calcium = #{calcium,jdbcType=DECIMAL},
      iron = #{iron,jdbcType=DECIMAL},
      zinc = #{zinc,jdbcType=DECIMAL},
      copper = #{copper,jdbcType=DECIMAL},
      manganese = #{manganese,jdbcType=DECIMAL},
      potassium = #{potassium,jdbcType=DECIMAL},
      phosphorus = #{phosphorus,jdbcType=DECIMAL},
      sodium = #{sodium,jdbcType=DECIMAL},
      selenium = #{selenium,jdbcType=DECIMAL}
    where code = #{code,jdbcType=VARCHAR}
  </update>

    <select id="findCityInfo" resultType="entity.City">
        select code, name from city
        WHERE code = #{code}
    </select>

</mapper>